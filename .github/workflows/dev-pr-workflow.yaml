name: Develop Branch Action

# todo: add a step to attach observability to consul.

on:
  pull_request_target:
    types: [opened]
    branches:
      - develop
  workflow_dispatch:    

jobs:
  dev-pr:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout our repository
      uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.11.1

    - name: Setup brew
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        (echo; echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"') >> /home/runner/.bash_profile
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        sudo apt-get install build-essential
        brew install gcc  
        test -d ~/.linuxbrew && eval "$(~/.linuxbrew/bin/brew shellenv)"
        test -d /home/linuxbrew/.linuxbrew && eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
        test -r ~/.bash_profile && echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.bash_profile
        echo "eval \"\$($(brew --prefix)/bin/brew shellenv)\"" >> ~/.profile             

        version: v3.11.1           
        
    - name: Install yq
      run: |
        sudo snap install yq
        
    - name: Extract versions
      run: |
        IMAGES=$(yq e -r '.annotations."artifacthub.io/images"' charts/consul/Chart.yaml)
        CONSUL_VERSION=$(echo "$IMAGES" | yq e '.[] | select(.name == "consul") | .image' -)
        CONSUL_K8S_CONTROL_PLANE_VERSION=$(echo "$IMAGES" | yq e '.[] | select(.name == "consul-k8s-control-plane") | .image' -)
        CONSUL_DATAPLANE_VERSION=$(echo "$IMAGES" | yq e '.[] | select(.name == "consul-dataplane") | .image' -)
        ENVOY_VERSION=$(echo "$IMAGES" | yq e '.[] | select(.name == "envoy") | .image' -)
        echo "$CONSUL_VERSION"
        echo "$CONSUL_K8S_CONTROL_PLANE_VERSION"
        echo "$CONSUL_DATAPLANE_VERSION"
        echo "$ENVOY_VERSION"
        echo "CONSUL_VERSION=$CONSUL_VERSION" >> $GITHUB_ENV
        echo "CONSUL_K8S_CONTROL_PLANE_VERSION=$CONSUL_K8S_CONTROL_PLANE_VERSION" >> $GITHUB_ENV
        echo "CONSUL_DATAPLANE_VERSION=$CONSUL_DATAPLANE_VERSION" >> $GITHUB_ENV
        echo "ENVOY_VERSION=$ENVOY_VERSION" >> $GITHUB_ENV

    - name: Login to Github Container Registry
      uses: docker/login-action@v2
      with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

    - name: Fetch consul images with specified tag
      run: |
        docker pull ${{ env.CONSUL_VERSION }}
        docker pull ${{ env.CONSUL_K8S_CONTROL_PLANE_VERSION }}
        docker pull ${{ env.CONSUL_DATAPLANE_VERSION }}
        docker pull ${{ env.ENVOY_VERSION }}
        

    - name: Run Trivy vulnerability scanner for consul  plane
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.CONSUL_VERSION }}
        format: 'sarif'
        output: 'consul.sarif'

    - name: Upload Trivy scan results for consul to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'consul.sarif'
        category: "Container scan for Consul"
          
    - name: Run Trivy vulnerability scanner for consul control plane
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.CONSUL_K8S_CONTROL_PLANE_VERSION }}
        format: 'sarif'
        output: 'consul-control-plane.sarif'

    - name: Upload Trivy scan results for consul control plane to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'consul-control-plane.sarif'
        category: "Container scan for Consul Control Plane"

    - name: Run Trivy vulnerability scanner for consul data plane
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.CONSUL_DATAPLANE_VERSION }}
        format: 'sarif'
        output: 'consul-data-plane.sarif'

    - name: Upload Trivy scan results for consul data plane to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'consul-data-plane.sarif'
        category: "Container scan for Consul Data Plane"

    - name: Run Trivy vulnerability scanner for consul data plane
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.ENVOY_VERSION }}
        format: 'sarif'
        output: 'consul-envoy.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'consul-envoy.sarif'
        category: "Container scan for Consul Envoy"                

    - uses: kubescape/github-action@main
      continue-on-error: true
      with:
        format: sarif
        outputFile: helm_results
        files: "charts/consul"

    - name: Upload Kubescape scan results to Github Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: helm_results.sarif  
        category: "Kubescape scan for Helm Charts"

    - name: Moving scan results to approapriate folders
      run: |
        TIMESTAMP=$(date -u +%Y%m%d%H%M%S)s
        mv -f helm_results.sarif reports/kubernetes-nsa-cisa-yaml-scan-analysis/helm_results_${TIMESTAMP}.sarif
        mv -f consul.sarif reports/container-security-analysis/consul_${TIMESTAMP}.sarif
        mv -f consul-control-plane.sarif reports/container-security-analysis/consul-control-plane_${TIMESTAMP}.sarif
        mv -f consul-data-plane.sarif reports/container-security-analysis/consul-data-plane_${TIMESTAMP}.sarif
        mv -f consul-envoy.sarif reports/container-security-analysis/consul-envoy_${TIMESTAMP}.sarif

    - name: Push changes to our repository
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        git pull origin
        git add charts/*
        git add reports/*
        git commit -m "added charts and scan results"
        echo ${{ github.head_ref }}
        git push origin ${{ github.head_ref }}
